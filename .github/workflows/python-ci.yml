name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pytest

    - name: Notificar éxito a Slack
      if: success()
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "text": "CI completado con éxito c: en `${{ github.repository }}`.\nCommit: `${{ github.sha }}`"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
 
    - name: Notificar error en Slack
      if: failure()
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "text": "Fallo en la integración continua :c en `${{ github.repository }}`.\nRevisá el commit `${{ github.sha }}`"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Espera a que la CI termine antes de desplegar

    steps:
    - name: Desplegar en Render
      run: |
        echo "Iniciando despliegue en Render..."
        sleep 5  # Simulación de despliegue (reemplázalo con comandos reales)
        echo "Despliegue exitoso"

    - name: Notificar éxito de despliegue a Slack
      if: success()
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "text": "Despliegue exitoso en Render para `${{ github.repository }}`!\ncommit `${{ github.sha }}`"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
