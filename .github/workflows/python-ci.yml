name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pytest

    - name: Notificar Ã©xito a Slack
      if: success()
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "text": "CI completado con Ã©xito c: en `${{ github.repository }}`.\nCommit: `${{ github.sha }}`"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
 
    - name: Notificar error en Slack
      if: failure()
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "text": "Fallo en la integraciÃ³n continua :c en `${{ github.repository }}`.\nRevisÃ¡ el commit `${{ github.sha }}`"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Verificar estado del despliegue en Render (esperando actualizaciÃ³n)
      id: check_render
      run: |
        for i in {1..5}; do  # IntentarÃ¡ hasta 5 veces antes de rendirse
          DEPLOY_STATUS=$(curl -X GET -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          https://api.render.com/v1/services/srv-d120e4s9c44c73fq0ftg/deploys | jq -r '.[0].deploy.status')

          echo "Intento $i - Estado del despliegue: $DEPLOY_STATUS"
          
          if [ "$DEPLOY_STATUS" == "live" ]; then
            echo "::set-output name=status::$DEPLOY_STATUS"
            exit 0  # Termina si el estado ya es 'live'
          fi

          sleep 20  # Espera 20 segundos antes de volver a consultar
        done

        echo "No se alcanzÃ³ 'live', usando el Ãºltimo estado conocido."
        echo "::set-output name=status::$DEPLOY_STATUS"

    - name: Notificar despliegue exitoso
      if: ${{ steps.check_render.outputs.status == 'live' }}
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "text": "ðŸš€ *Despliegue exitoso en Render!* ðŸŽ‰"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

#
#    - name: Notificar despliegue fallido
#      if: ${{ steps.check_render.outputs.status == 'live' }}
#      uses: slackapi/slack-github-action@v1.24.0
#      with:
#        payload: |
#          {
#            "text": "ðŸš€ *Despliegue exitoso en Render!* ðŸŽ‰"
#          }
#      env:
#        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#

    - name: Mostrar estado del despliegue en logs
      run: |
        echo "Estado del despliegue recibido: ${{ steps.check_render.outputs.status }}"

